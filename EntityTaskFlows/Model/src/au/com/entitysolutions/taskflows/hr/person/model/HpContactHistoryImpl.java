package au.com.entitysolutions.taskflows.hr.person.model;

import au.com.entitysolutions.taskflows.model.CustomEntityImpl;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 30 09:39:12 EST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HpContactHistoryImpl extends CustomEntityImpl {
  private static EntityDefImpl mDefinitionObject;

  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
   */
  public enum AttributesEnum {
    ContactId {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getContactId();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setContactId((Number)value);
      }
    }
    ,
    ContactType {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getContactType();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setContactType((String)value);
      }
    }
    ,
    ActivityType {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getActivityType();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setActivityType((String)value);
      }
    }
    ,
    ContactDate {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getContactDate();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setContactDate((Date)value);
      }
    }
    ,
    EntityEmployeeId {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getEntityEmployeeId();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setEntityEmployeeId((Number)value);
      }
    }
    ,
    CopyToPerson {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getCopyToPerson();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setCopyToPerson((String)value);
      }
    }
    ,
    CopyToOrganisation {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getCopyToOrganisation();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setCopyToOrganisation((String)value);
      }
    }
    ,
    Comments {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getComments();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setComments((String)value);
      }
    }
    ,
    PersonId {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getPersonId();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setPersonId((Number)value);
      }
    }
    ,
    OrganisationId {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getOrganisationId();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setOrganisationId((Number)value);
      }
    }
    ,
    BusinessGroupId {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getBusinessGroupId();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setBusinessGroupId((Number)value);
      }
    }
    ,
    CreatedBy {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getCreatedBy();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setCreatedBy((Number)value);
      }
    }
    ,
    CreationDate {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getCreationDate();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setCreationDate((Date)value);
      }
    }
    ,
    LastUpdateDate {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getLastUpdateDate();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setLastUpdateDate((Date)value);
      }
    }
    ,
    LastUpdatedBy {
      public Object get(HpContactHistoryImpl obj) {
        return obj.getLastUpdatedBy();
      }

      public void put(HpContactHistoryImpl obj, Object value) {
        obj.setLastUpdatedBy((Number)value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static int firstIndex = 0;

    public abstract Object get(HpContactHistoryImpl object);

    public abstract void put(HpContactHistoryImpl object, Object value);

    public int index() {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static int firstIndex() {
      return firstIndex;
    }

    public static int count() {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static AttributesEnum[] staticValues() {
      if (vals == null) {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }

  public static final int CONTACTID = AttributesEnum.ContactId.index();
  public static final int CONTACTTYPE = AttributesEnum.ContactType.index();
  public static final int ACTIVITYTYPE = AttributesEnum.ActivityType.index();
  public static final int CONTACTDATE = AttributesEnum.ContactDate.index();
  public static final int ENTITYEMPLOYEEID = AttributesEnum.EntityEmployeeId.index();
  public static final int COPYTOPERSON = AttributesEnum.CopyToPerson.index();
  public static final int COPYTOORGANISATION = AttributesEnum.CopyToOrganisation.index();
  public static final int COMMENTS = AttributesEnum.Comments.index();
  public static final int PERSONID = AttributesEnum.PersonId.index();
  public static final int ORGANISATIONID = AttributesEnum.OrganisationId.index();
  public static final int BUSINESSGROUPID = AttributesEnum.BusinessGroupId.index();
  public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
  public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
  public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
  public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();

  /**
   * This is the default constructor (do not remove).
   */
  public HpContactHistoryImpl() {
  }

  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = EntityDefImpl.findDefObject("au.com.entitysolutions.taskflows.hr.person.model.HpContactHistory");
    }
    return mDefinitionObject;
  }

  /**
   * Gets the attribute value for ContactId, using the alias name ContactId.
   * @return the ContactId
   */
  public Number getContactId() {
    return (Number)getAttributeInternal(CONTACTID);
  }

  /**
   * Sets <code>value</code> as the attribute value for ContactId.
   * @param value value to set the ContactId
   */
  public void setContactId(Number value) {
    setAttributeInternal(CONTACTID, value);
  }

  /**
   * Gets the attribute value for ContactType, using the alias name ContactType.
   * @return the ContactType
   */
  public String getContactType() {
    return (String)getAttributeInternal(CONTACTTYPE);
  }

  /**
   * Sets <code>value</code> as the attribute value for ContactType.
   * @param value value to set the ContactType
   */
  public void setContactType(String value) {
    setAttributeInternal(CONTACTTYPE, value);
  }

  /**
   * Gets the attribute value for ActivityType, using the alias name ActivityType.
   * @return the ActivityType
   */
  public String getActivityType() {
    return (String)getAttributeInternal(ACTIVITYTYPE);
  }

  /**
   * Sets <code>value</code> as the attribute value for ActivityType.
   * @param value value to set the ActivityType
   */
  public void setActivityType(String value) {
    setAttributeInternal(ACTIVITYTYPE, value);
  }

  /**
   * Gets the attribute value for ContactDate, using the alias name ContactDate.
   * @return the ContactDate
   */
  public Date getContactDate() {
    return (Date)getAttributeInternal(CONTACTDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for ContactDate.
   * @param value value to set the ContactDate
   */
  public void setContactDate(Date value) {
    setAttributeInternal(CONTACTDATE, value);
  }

  /**
   * Gets the attribute value for EntityEmployeeId, using the alias name EntityEmployeeId.
   * @return the EntityEmployeeId
   */
  public Number getEntityEmployeeId() {
    return (Number)getAttributeInternal(ENTITYEMPLOYEEID);
  }

  /**
   * Sets <code>value</code> as the attribute value for EntityEmployeeId.
   * @param value value to set the EntityEmployeeId
   */
  public void setEntityEmployeeId(Number value) {
    setAttributeInternal(ENTITYEMPLOYEEID, value);
  }

  /**
   * Gets the attribute value for CopyToPerson, using the alias name CopyToPerson.
   * @return the CopyToPerson
   */
  public String getCopyToPerson() {
    return (String)getAttributeInternal(COPYTOPERSON);
  }

  /**
   * Sets <code>value</code> as the attribute value for CopyToPerson.
   * @param value value to set the CopyToPerson
   */
  public void setCopyToPerson(String value) {
    setAttributeInternal(COPYTOPERSON, value);
  }

  /**
   * Gets the attribute value for CopyToOrganisation, using the alias name CopyToOrganisation.
   * @return the CopyToOrganisation
   */
  public String getCopyToOrganisation() {
    return (String)getAttributeInternal(COPYTOORGANISATION);
  }

  /**
   * Sets <code>value</code> as the attribute value for CopyToOrganisation.
   * @param value value to set the CopyToOrganisation
   */
  public void setCopyToOrganisation(String value) {
    setAttributeInternal(COPYTOORGANISATION, value);
  }

  /**
   * Gets the attribute value for Comments, using the alias name Comments.
   * @return the Comments
   */
  public String getComments() {
    return (String)getAttributeInternal(COMMENTS);
  }

  /**
   * Sets <code>value</code> as the attribute value for Comments.
   * @param value value to set the Comments
   */
  public void setComments(String value) {
    setAttributeInternal(COMMENTS, value);
  }

  /**
   * Gets the attribute value for PersonId, using the alias name PersonId.
   * @return the PersonId
   */
  public Number getPersonId() {
    return (Number)getAttributeInternal(PERSONID);
  }

  /**
   * Sets <code>value</code> as the attribute value for PersonId.
   * @param value value to set the PersonId
   */
  public void setPersonId(Number value) {
    setAttributeInternal(PERSONID, value);
  }

  /**
   * Gets the attribute value for OrganisationId, using the alias name OrganisationId.
   * @return the OrganisationId
   */
  public Number getOrganisationId() {
    return (Number)getAttributeInternal(ORGANISATIONID);
  }

  /**
   * Sets <code>value</code> as the attribute value for OrganisationId.
   * @param value value to set the OrganisationId
   */
  public void setOrganisationId(Number value) {
    setAttributeInternal(ORGANISATIONID, value);
  }

  /**
   * Gets the attribute value for BusinessGroupId, using the alias name BusinessGroupId.
   * @return the BusinessGroupId
   */
  public Number getBusinessGroupId() {
    return (Number)getAttributeInternal(BUSINESSGROUPID);
  }

  /**
   * Sets <code>value</code> as the attribute value for BusinessGroupId.
   * @param value value to set the BusinessGroupId
   */
  public void setBusinessGroupId(Number value) {
    setAttributeInternal(BUSINESSGROUPID, value);
  }

  /**
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
   * @return the CreatedBy
   */
  public Number getCreatedBy() {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * Sets <code>value</code> as the attribute value for CreatedBy.
   * @param value value to set the CreatedBy
   */
  public void setCreatedBy(Number value) {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * Gets the attribute value for CreationDate, using the alias name CreationDate.
   * @return the CreationDate
   */
  public Date getCreationDate() {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for CreationDate.
   * @param value value to set the CreationDate
   */
  public void setCreationDate(Date value) {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
   * @return the LastUpdateDate
   */
  public Date getLastUpdateDate() {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for LastUpdateDate.
   * @param value value to set the LastUpdateDate
   */
  public void setLastUpdateDate(Date value) {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
   * @return the LastUpdatedBy
   */
  public Number getLastUpdatedBy() {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * Sets <code>value</code> as the attribute value for LastUpdatedBy.
   * @param value value to set the LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value) {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index,
                                         AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value,
                                       AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }

  /**
   * @param contactId key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(Number contactId) {
    return new Key(new Object[]{contactId});
  }


}
