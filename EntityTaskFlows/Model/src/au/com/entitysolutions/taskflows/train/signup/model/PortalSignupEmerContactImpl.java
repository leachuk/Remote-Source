package au.com.entitysolutions.taskflows.train.signup.model;

import au.com.entitysolutions.taskflows.model.CustomEntityImpl;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 25 14:13:40 EST 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PortalSignupEmerContactImpl extends CustomEntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        EmerContactId {
            public Object get(PortalSignupEmerContactImpl obj) {
                return obj.getEmerContactId();
            }

            public void put(PortalSignupEmerContactImpl obj, Object value) {
                obj.setEmerContactId((Number)value);
            }
        }
        ,
        UserTfId {
            public Object get(PortalSignupEmerContactImpl obj) {
                return obj.getUserTfId();
            }

            public void put(PortalSignupEmerContactImpl obj, Object value) {
                obj.setUserTfId((Number)value);
            }
        }
        ,
        EmerContactName {
            public Object get(PortalSignupEmerContactImpl obj) {
                return obj.getEmerContactName();
            }

            public void put(PortalSignupEmerContactImpl obj, Object value) {
                obj.setEmerContactName((String)value);
            }
        }
        ,
        EmerContactPhone {
            public Object get(PortalSignupEmerContactImpl obj) {
                return obj.getEmerContactPhone();
            }

            public void put(PortalSignupEmerContactImpl obj, Object value) {
                obj.setEmerContactPhone((String)value);
            }
        }
        ,
        EmerContactRelationship {
            public Object get(PortalSignupEmerContactImpl obj) {
                return obj.getEmerContactRelationship();
            }

            public void put(PortalSignupEmerContactImpl obj, Object value) {
                obj.setEmerContactRelationship((String)value);
            }
        }
        ,
        Transformed {
            public Object get(PortalSignupEmerContactImpl obj) {
                return obj.getTransformed();
            }

            public void put(PortalSignupEmerContactImpl obj, Object value) {
                obj.setTransformed((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(PortalSignupEmerContactImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(PortalSignupEmerContactImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(PortalSignupEmerContactImpl obj) {
                return obj.getCreationDate();
            }

            public void put(PortalSignupEmerContactImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(PortalSignupEmerContactImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(PortalSignupEmerContactImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(PortalSignupEmerContactImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(PortalSignupEmerContactImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PortalSignupEmerContactImpl object);

        public abstract void put(PortalSignupEmerContactImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int EMERCONTACTID = AttributesEnum.EmerContactId.index();
    public static final int USERTFID = AttributesEnum.UserTfId.index();
    public static final int EMERCONTACTNAME = AttributesEnum.EmerContactName.index();
    public static final int EMERCONTACTPHONE = AttributesEnum.EmerContactPhone.index();
    public static final int EMERCONTACTRELATIONSHIP = AttributesEnum.EmerContactRelationship.index();
    public static final int TRANSFORMED = AttributesEnum.Transformed.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PortalSignupEmerContactImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("au.com.entitysolutions.taskflows.train.signup.model.PortalSignupEmerContact");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for EmerContactId, using the alias name EmerContactId.
     * @return the EmerContactId
     */
    public Number getEmerContactId() {
        return (Number)getAttributeInternal(EMERCONTACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmerContactId.
     * @param value value to set the EmerContactId
     */
    public void setEmerContactId(Number value) {
        setAttributeInternal(EMERCONTACTID, value);
    }

    /**
     * Gets the attribute value for UserTfId, using the alias name UserTfId.
     * @return the UserTfId
     */
    public Number getUserTfId() {
        return (Number)getAttributeInternal(USERTFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserTfId.
     * @param value value to set the UserTfId
     */
    public void setUserTfId(Number value) {
        setAttributeInternal(USERTFID, value);
    }

    /**
     * Gets the attribute value for EmerContactName, using the alias name EmerContactName.
     * @return the EmerContactName
     */
    public String getEmerContactName() {
        return (String)getAttributeInternal(EMERCONTACTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmerContactName.
     * @param value value to set the EmerContactName
     */
    public void setEmerContactName(String value) {
        setAttributeInternal(EMERCONTACTNAME, value);
    }

    /**
     * Gets the attribute value for EmerContactPhone, using the alias name EmerContactPhone.
     * @return the EmerContactPhone
     */
    public String getEmerContactPhone() {
        return (String)getAttributeInternal(EMERCONTACTPHONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmerContactPhone.
     * @param value value to set the EmerContactPhone
     */
    public void setEmerContactPhone(String value) {
        setAttributeInternal(EMERCONTACTPHONE, value);
    }

    /**
     * Gets the attribute value for EmerContactRelationship, using the alias name EmerContactRelationship.
     * @return the EmerContactRelationship
     */
    public String getEmerContactRelationship() {
        return (String)getAttributeInternal(EMERCONTACTRELATIONSHIP);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmerContactRelationship.
     * @param value value to set the EmerContactRelationship
     */
    public void setEmerContactRelationship(String value) {
        setAttributeInternal(EMERCONTACTRELATIONSHIP, value);
    }

    /**
     * Gets the attribute value for Transformed, using the alias name Transformed.
     * @return the Transformed
     */
    public String getTransformed() {
        return (String)getAttributeInternal(TRANSFORMED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Transformed.
     * @param value value to set the Transformed
     */
    public void setTransformed(String value) {
        setAttributeInternal(TRANSFORMED, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param emerContactId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number emerContactId) {
        return new Key(new Object[]{emerContactId});
    }


}
