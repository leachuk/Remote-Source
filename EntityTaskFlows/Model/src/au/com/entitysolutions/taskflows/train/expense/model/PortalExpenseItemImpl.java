package au.com.entitysolutions.taskflows.train.expense.model;

import au.com.entitysolutions.taskflows.model.CustomEntityImpl;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 23 11:53:23 EST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PortalExpenseItemImpl extends CustomEntityImpl {
  private static EntityDefImpl mDefinitionObject;

  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
   */
  public enum AttributesEnum {
    ItemId {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getItemId();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setItemId((Number)value);
      }
    }
    ,
    ExpenseId {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getExpenseId();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setExpenseId((Number)value);
      }
    }
    ,
    ItemType {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getItemType();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setItemType((String)value);
      }
    }
    ,
    ItemDescription {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getItemDescription();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setItemDescription((String)value);
      }
    }
    ,
    Amount {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getAmount();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setAmount((Number)value);
      }
    }
    ,
    PercentUse {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getPercentUse();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setPercentUse((Number)value);
      }
    }
    ,
    DocUploadId {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getDocUploadId();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setDocUploadId((Number)value);
      }
    }
    ,
    DocFilePath {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getDocFilePath();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setDocFilePath((String)value);
      }
    }
    ,
    CreatedBy {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getCreatedBy();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setCreatedBy((Number)value);
      }
    }
    ,
    CreationDate {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getCreationDate();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setCreationDate((Date)value);
      }
    }
    ,
    LastUpdatedBy {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getLastUpdatedBy();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setLastUpdatedBy((Number)value);
      }
    }
    ,
    LastUpdateDate {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getLastUpdateDate();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setLastUpdateDate((Date)value);
      }
    }
    ,
    FormFilePath {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getFormFilePath();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setFormFilePath((String)value);
      }
    }
    ,
    PortalExpense {
      public Object get(PortalExpenseItemImpl obj) {
        return obj.getPortalExpense();
      }

      public void put(PortalExpenseItemImpl obj, Object value) {
        obj.setPortalExpense((PortalExpenseImpl)value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static int firstIndex = 0;

    public abstract Object get(PortalExpenseItemImpl object);

    public abstract void put(PortalExpenseItemImpl object, Object value);

    public int index() {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static int firstIndex() {
      return firstIndex;
    }

    public static int count() {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static AttributesEnum[] staticValues() {
      if (vals == null) {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }


  public static final int ITEMID = AttributesEnum.ItemId.index();
  public static final int EXPENSEID = AttributesEnum.ExpenseId.index();
  public static final int ITEMTYPE = AttributesEnum.ItemType.index();
  public static final int ITEMDESCRIPTION = AttributesEnum.ItemDescription.index();
  public static final int AMOUNT = AttributesEnum.Amount.index();
  public static final int PERCENTUSE = AttributesEnum.PercentUse.index();
  public static final int DOCUPLOADID = AttributesEnum.DocUploadId.index();
  public static final int DOCFILEPATH = AttributesEnum.DocFilePath.index();
  public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
  public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
  public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
  public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
  public static final int FORMFILEPATH = AttributesEnum.FormFilePath.index();
  public static final int PORTALEXPENSE = AttributesEnum.PortalExpense.index();

  /**
   * This is the default constructor (do not remove).
   */
  public PortalExpenseItemImpl() {
  }


  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    if (mDefinitionObject == null) {
      mDefinitionObject = EntityDefImpl.findDefObject("au.com.entitysolutions.taskflows.train.expense.model.PortalExpenseItem");
    }
    return mDefinitionObject;
  }

  /**
   * Gets the attribute value for ItemId, using the alias name ItemId.
   * @return the ItemId
   */
  public Number getItemId() {
    return (Number)getAttributeInternal(ITEMID);
  }

  /**
   * Sets <code>value</code> as the attribute value for ItemId.
   * @param value value to set the ItemId
   */
  public void setItemId(Number value) {
    setAttributeInternal(ITEMID, value);
  }

  /**
   * Gets the attribute value for ExpenseId, using the alias name ExpenseId.
   * @return the ExpenseId
   */
  public Number getExpenseId() {
    return (Number)getAttributeInternal(EXPENSEID);
  }

  /**
   * Sets <code>value</code> as the attribute value for ExpenseId.
   * @param value value to set the ExpenseId
   */
  public void setExpenseId(Number value) {
    setAttributeInternal(EXPENSEID, value);
  }


  /**
   * Gets the attribute value for ItemDescription, using the alias name ItemDescription.
   * @return the ItemDescription
   */
  public String getItemDescription() {
    return (String)getAttributeInternal(ITEMDESCRIPTION);
  }

  /**
   * Sets <code>value</code> as the attribute value for ItemDescription.
   * @param value value to set the ItemDescription
   */
  public void setItemDescription(String value) {
    setAttributeInternal(ITEMDESCRIPTION, value);
  }

  /**
   * Gets the attribute value for Amount, using the alias name Amount.
   * @return the Amount
   */
  public Number getAmount() {
    return (Number)getAttributeInternal(AMOUNT);
  }

  /**
   * Sets <code>value</code> as the attribute value for Amount.
   * @param value value to set the Amount
   */
  public void setAmount(Number value) {
    setAttributeInternal(AMOUNT, value);
  }

  /**
   * Gets the attribute value for PercentUse, using the alias name PercentUse.
   * @return the PercentUse
   */
  public Number getPercentUse() {
    return (Number)getAttributeInternal(PERCENTUSE);
  }

  /**
   * Sets <code>value</code> as the attribute value for PercentUse.
   * @param value value to set the PercentUse
   */
  public void setPercentUse(Number value) {
    setAttributeInternal(PERCENTUSE, value);
  }

  /**
   * Gets the attribute value for DocUploadId, using the alias name DocUploadId.
   * @return the DocUploadId
   */
  public Number getDocUploadId() {
    return (Number)getAttributeInternal(DOCUPLOADID);
  }

  /**
   * Sets <code>value</code> as the attribute value for DocUploadId.
   * @param value value to set the DocUploadId
   */
  public void setDocUploadId(Number value) {
    setAttributeInternal(DOCUPLOADID, value);
  }

  /**
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
   * @return the CreatedBy
   */
  public Number getCreatedBy() {
    return (Number)getAttributeInternal(CREATEDBY);
  }

  /**
   * Sets <code>value</code> as the attribute value for CreatedBy.
   * @param value value to set the CreatedBy
   */
  public void setCreatedBy(Number value) {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * Gets the attribute value for CreationDate, using the alias name CreationDate.
   * @return the CreationDate
   */
  public Date getCreationDate() {
    return (Date)getAttributeInternal(CREATIONDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for CreationDate.
   * @param value value to set the CreationDate
   */
  public void setCreationDate(Date value) {
    setAttributeInternal(CREATIONDATE, value);
  }

  /**
   * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
   * @return the LastUpdatedBy
   */
  public Number getLastUpdatedBy() {
    return (Number)getAttributeInternal(LASTUPDATEDBY);
  }

  /**
   * Sets <code>value</code> as the attribute value for LastUpdatedBy.
   * @param value value to set the LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value) {
    setAttributeInternal(LASTUPDATEDBY, value);
  }

  /**
   * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
   * @return the LastUpdateDate
   */
  public Date getLastUpdateDate() {
    return (Date)getAttributeInternal(LASTUPDATEDATE);
  }

  /**
   * Sets <code>value</code> as the attribute value for LastUpdateDate.
   * @param value value to set the LastUpdateDate
   */
  public void setLastUpdateDate(Date value) {
    setAttributeInternal(LASTUPDATEDATE, value);
  }

  /**
   * Gets the attribute value for FormFilePath, using the alias name FormFilePath.
   * @return the FormFilePath
   */
  public String getFormFilePath() {
    return (String)getAttributeInternal(FORMFILEPATH);
  }

  /**
   * Sets <code>value</code> as the attribute value for FormFilePath.
   * @param value value to set the FormFilePath
   */
  public void setFormFilePath(String value) {
    setAttributeInternal(FORMFILEPATH, value);
  }

  /**
   * Gets the attribute value for DocFilePath, using the alias name DocFilePath.
   * @return the DocFilePath
   */
  public String getDocFilePath() {
    return (String)getAttributeInternal(DOCFILEPATH);
  }

  /**
   * Sets <code>value</code> as the attribute value for DocFilePath.
   * @param value value to set the DocFilePath
   */
  public void setDocFilePath(String value) {
    setAttributeInternal(DOCFILEPATH, value);
  }

  /**
   * Gets the attribute value for ItemType, using the alias name ItemType.
   * @return the ItemType
   */
  public String getItemType() {
    return (String)getAttributeInternal(ITEMTYPE);
  }

  /**
   * Sets <code>value</code> as the attribute value for ItemType.
   * @param value value to set the ItemType
   */
  public void setItemType(String value) {
    setAttributeInternal(ITEMTYPE, value);
  }

  /**
   * getAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param attrDef the attribute

   * @return the attribute value
   * @throws Exception
   */
  protected Object getAttrInvokeAccessor(int index,
                                         AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

  /**
   * setAttrInvokeAccessor: generated method. Do not modify.
   * @param index the index identifying the attribute
   * @param value the value to assign to the attribute
   * @param attrDef the attribute

   * @throws Exception
   */
  protected void setAttrInvokeAccessor(int index, Object value,
                                       AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }

  /**
   * @return the associated entity PortalExpenseImpl.
   */
  public PortalExpenseImpl getPortalExpense() {
    return (PortalExpenseImpl)getAttributeInternal(PORTALEXPENSE);
  }

  /**
   * Sets <code>value</code> as the associated entity PortalExpenseImpl.
   */
  public void setPortalExpense(PortalExpenseImpl value) {
    setAttributeInternal(PORTALEXPENSE, value);
  }

  /**
   * @param itemId key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(Number itemId) {
    return new Key(new Object[]{itemId});
  }


}
