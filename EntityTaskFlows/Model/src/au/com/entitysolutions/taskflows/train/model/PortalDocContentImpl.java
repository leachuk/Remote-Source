package au.com.entitysolutions.taskflows.train.model;

import au.com.entitysolutions.taskflows.model.CustomEntityImpl;

import oracle.jbo.Key;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 26 16:27:37 EST 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PortalDocContentImpl extends CustomEntityImpl {
    private static EntityDefImpl mDefinitionObject;

    @Override
    public boolean hasHistoryColumns() {
        return false;
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DocContentId {
            public Object get(PortalDocContentImpl obj) {
                return obj.getDocContentId();
            }

            public void put(PortalDocContentImpl obj, Object value) {
                obj.setDocContentId((Number)value);
            }
        }
        ,
        DocContentName {
            public Object get(PortalDocContentImpl obj) {
                return obj.getDocContentName();
            }

            public void put(PortalDocContentImpl obj, Object value) {
                obj.setDocContentName((String)value);
            }
        }
        ,
        DocContentMime {
            public Object get(PortalDocContentImpl obj) {
                return obj.getDocContentMime();
            }

            public void put(PortalDocContentImpl obj, Object value) {
                obj.setDocContentMime((String)value);
            }
        }
        ,
        DocContentBytesize {
            public Object get(PortalDocContentImpl obj) {
                return obj.getDocContentBytesize();
            }

            public void put(PortalDocContentImpl obj, Object value) {
                obj.setDocContentBytesize((Number)value);
            }
        }
        ,
        DocContent {
            public Object get(PortalDocContentImpl obj) {
                return obj.getDocContent();
            }

            public void put(PortalDocContentImpl obj, Object value) {
                obj.setDocContent((BlobDomain)value);
            }
        }
        ,
        DocContentIdPortalUserTFStepDoc {
            public Object get(PortalDocContentImpl obj) {
                return obj.getDocContentIdPortalUserTFStepDoc();
            }

            public void put(PortalDocContentImpl obj, Object value) {
                obj.setDocContentIdPortalUserTFStepDoc((CustomEntityImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PortalDocContentImpl object);

        public abstract void put(PortalDocContentImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int DOCCONTENTID = AttributesEnum.DocContentId.index();
    public static final int DOCCONTENTNAME = AttributesEnum.DocContentName.index();
    public static final int DOCCONTENTMIME = AttributesEnum.DocContentMime.index();
    public static final int DOCCONTENTBYTESIZE = AttributesEnum.DocContentBytesize.index();
    public static final int DOCCONTENT = AttributesEnum.DocContent.index();
    public static final int DOCCONTENTIDPORTALUSERTFSTEPDOC = AttributesEnum.DocContentIdPortalUserTFStepDoc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PortalDocContentImpl() {
    }

    /**
     * Gets the attribute value for DocContentId, using the alias name DocContentId.
     * @return the DocContentId
     */
    public Number getDocContentId() {
        return (Number)getAttributeInternal(DOCCONTENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocContentId.
     * @param value value to set the DocContentId
     */
    public void setDocContentId(Number value) {
        setAttributeInternal(DOCCONTENTID, value);
    }

    /**
     * Gets the attribute value for DocContentName, using the alias name DocContentName.
     * @return the DocContentName
     */
    public String getDocContentName() {
        return (String)getAttributeInternal(DOCCONTENTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocContentName.
     * @param value value to set the DocContentName
     */
    public void setDocContentName(String value) {
        setAttributeInternal(DOCCONTENTNAME, value);
    }

    /**
     * Gets the attribute value for DocContentMime, using the alias name DocContentMime.
     * @return the DocContentMime
     */
    public String getDocContentMime() {
        return (String)getAttributeInternal(DOCCONTENTMIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocContentMime.
     * @param value value to set the DocContentMime
     */
    public void setDocContentMime(String value) {
        setAttributeInternal(DOCCONTENTMIME, value);
    }

    /**
     * Gets the attribute value for DocContentBytesize, using the alias name DocContentBytesize.
     * @return the DocContentBytesize
     */
    public Number getDocContentBytesize() {
        return (Number)getAttributeInternal(DOCCONTENTBYTESIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocContentBytesize.
     * @param value value to set the DocContentBytesize
     */
    public void setDocContentBytesize(Number value) {
        setAttributeInternal(DOCCONTENTBYTESIZE, value);
    }

    /**
     * Gets the attribute value for DocContent, using the alias name DocContent.
     * @return the DocContent
     */
    public BlobDomain getDocContent() {
        return (BlobDomain)getAttributeInternal(DOCCONTENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocContent.
     * @param value value to set the DocContent
     */
    public void setDocContent(BlobDomain value) {
        setAttributeInternal(DOCCONTENT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity au.com.entitysolutions.taskflows.model.CustomEntityImpl.
     */
    public CustomEntityImpl getDocContentIdPortalUserTFStepDoc() {
        return (CustomEntityImpl)getAttributeInternal(DOCCONTENTIDPORTALUSERTFSTEPDOC);
    }

    /**
     * Sets <code>value</code> as the associated entity au.com.entitysolutions.taskflows.model.CustomEntityImpl.
     */
    public void setDocContentIdPortalUserTFStepDoc(CustomEntityImpl value) {
        setAttributeInternal(DOCCONTENTIDPORTALUSERTFSTEPDOC, value);
    }

    /**
     * @param docContentId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number docContentId) {
        return new Key(new Object[]{docContentId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("au.com.entitysolutions.taskflows.train.model.PortalDocContent");
        }
        return mDefinitionObject;
    }
}
