package au.com.entitysolutions.taskflows.notification;

import au.com.entitysolutions.taskflows.model.CustomEntityImpl;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Feb 26 17:35:58 EST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PortalNotificationImpl extends CustomEntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        NotificationId {
            public Object get(PortalNotificationImpl obj) {
                return obj.getNotificationId();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setNotificationId((Number)value);
            }
        }
        ,
        PersonNumber {
            public Object get(PortalNotificationImpl obj) {
                return obj.getPersonNumber();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setPersonNumber((Number)value);
            }
        }
        ,
        Category {
            public Object get(PortalNotificationImpl obj) {
                return obj.getCategory();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setCategory((String)value);
            }
        }
        ,
        Title {
            public Object get(PortalNotificationImpl obj) {
                return obj.getTitle();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setTitle((String)value);
            }
        }
        ,
        Brief {
            public Object get(PortalNotificationImpl obj) {
                return obj.getBrief();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setBrief((String)value);
            }
        }
        ,
        Description {
            public Object get(PortalNotificationImpl obj) {
                return obj.getDescription();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setDescription((String)value);
            }
        }
        ,
        DueDate {
            public Object get(PortalNotificationImpl obj) {
                return obj.getDueDate();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setDueDate((Date)value);
            }
        }
        ,
        GroupType {
            public Object get(PortalNotificationImpl obj) {
                return obj.getGroupType();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setGroupType((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(PortalNotificationImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(PortalNotificationImpl obj) {
                return obj.getCreationDate();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(PortalNotificationImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(PortalNotificationImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        Display {
            public Object get(PortalNotificationImpl obj) {
                return obj.getDisplay();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setDisplay((Number)value);
            }
        }
        ,
        Type {
            public Object get(PortalNotificationImpl obj) {
                return obj.getType();
            }

            public void put(PortalNotificationImpl obj, Object value) {
                obj.setType((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PortalNotificationImpl object);

        public abstract void put(PortalNotificationImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int NOTIFICATIONID = AttributesEnum.NotificationId.index();
    public static final int PERSONNUMBER = AttributesEnum.PersonNumber.index();
    public static final int CATEGORY = AttributesEnum.Category.index();
    public static final int TITLE = AttributesEnum.Title.index();
    public static final int BRIEF = AttributesEnum.Brief.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int DUEDATE = AttributesEnum.DueDate.index();
    public static final int GROUPTYPE = AttributesEnum.GroupType.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int DISPLAY = AttributesEnum.Display.index();
    public static final int TYPE = AttributesEnum.Type.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PortalNotificationImpl() {
    }

    /**
     * Gets the attribute value for NotificationId, using the alias name NotificationId.
     * @return the NotificationId
     */
    public Number getNotificationId() {
        return (Number)getAttributeInternal(NOTIFICATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for NotificationId.
     * @param value value to set the NotificationId
     */
    public void setNotificationId(Number value) {
        setAttributeInternal(NOTIFICATIONID, value);
    }

    /**
     * Gets the attribute value for PersonNumber, using the alias name PersonNumber.
     * @return the PersonNumber
     */
    public Number getPersonNumber() {
        return (Number)getAttributeInternal(PERSONNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for PersonNumber.
     * @param value value to set the PersonNumber
     */
    public void setPersonNumber(Number value) {
        setAttributeInternal(PERSONNUMBER, value);
    }

    /**
     * Gets the attribute value for Category, using the alias name Category.
     * @return the Category
     */
    public String getCategory() {
        return (String)getAttributeInternal(CATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Category.
     * @param value value to set the Category
     */
    public void setCategory(String value) {
        setAttributeInternal(CATEGORY, value);
    }

    /**
     * Gets the attribute value for Title, using the alias name Title.
     * @return the Title
     */
    public String getTitle() {
        return (String)getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Title.
     * @param value value to set the Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for Brief, using the alias name Brief.
     * @return the Brief
     */
    public String getBrief() {
        return (String)getAttributeInternal(BRIEF);
    }

    /**
     * Sets <code>value</code> as the attribute value for Brief.
     * @param value value to set the Brief
     */
    public void setBrief(String value) {
        setAttributeInternal(BRIEF, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for DueDate, using the alias name DueDate.
     * @return the DueDate
     */
    public Date getDueDate() {
        return (Date)getAttributeInternal(DUEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DueDate.
     * @param value value to set the DueDate
     */
    public void setDueDate(Date value) {
        setAttributeInternal(DUEDATE, value);
    }

    /**
     * Gets the attribute value for GroupType, using the alias name GroupType.
     * @return the GroupType
     */
    public String getGroupType() {
        return (String)getAttributeInternal(GROUPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GroupType.
     * @param value value to set the GroupType
     */
    public void setGroupType(String value) {
        setAttributeInternal(GROUPTYPE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Display, using the alias name Display.
     * @return the Display
     */
    public Number getDisplay() {
        return (Number)getAttributeInternal(DISPLAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Display.
     * @param value value to set the Display
     */
    public void setDisplay(Number value) {
        setAttributeInternal(DISPLAY, value);
    }

    /**
     * Gets the attribute value for Type, using the alias name Type.
     * @return the Type
     */
    public String getType() {
        return (String)getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Type.
     * @param value value to set the Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param notificationId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number notificationId) {
        return new Key(new Object[]{notificationId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("au.com.entitysolutions.taskflows.notification.PortalNotification");
        }
        return mDefinitionObject;
    }
}
